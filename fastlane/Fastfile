lane :next_version do |options|
  ensure_git_status_clean()
  prepare_lane_options(
    options: options,
    mapping: {
      :version => {:env_var => "DG_RELEASE_VERSION"},
      :build => {
        :env_var => "DG_BUILD_NUMBER",
        :default_value => "1"
      },
      :project => {:env_var => "DG_PROJECT"},
      :bump_type => {:env_var => "DG_BUMP_TYPE"}
    }
  )
  release_version = increment_version_number(
    xcodeproj: options[:project],
    version_number: options[:version],
    bump_type: options[:bump_type]
  )
  build_number = increment_build_number(
    xcodeproj: options[:project],
    build_number: options[:build]
  )
  git_commit(
    path: ["."],
    message: "Bumped release version '#{release_version}', build number ##{build_number}"
  )
  UI.success "Release '#{release_version}', build number ##{build_number} created."
end

lane :publish_app_beta do |options|
  ensure_git_status_clean()
  ensure_git_flow_init()
  beta_branch = nil
  begin
    beta_branch = Actions.sh("git config --get fastlane.branch.beta").strip()
  rescue
    beta_branch = UI.input("Branch name for beta releases: [beta] ")
    if beta_branch.length == 0
      beta_branch = "beta"
    end
    Actions.sh("git config fastlane.branch.beta #{beta_branch}")
  end
  develop_branch = Actions.sh("git config --get gitflow.branch.develop").strip()
  prefix_versiontag = Actions.sh("git config --get gitflow.prefix.versiontag").strip()
  if git_branch_exists(branch: beta_branch)
    Actions.sh("git checkout #{beta_branch}")
    Actions.sh("git merge #{develop_branch}")
  else
    Actions.sh("git checkout -b #{beta_branch} #{develop_branch}")
  end
  version = get_version_number()
  build = get_build_number()
  tag = "#{prefix_versiontag}#{version}-beta#{build}"
  if git_tag_exists(tag: tag)
    UI.error "The version '#{version}' beta #{build} exists"
    action = UI.select("Would you like to increment the build number or update the version ?", ["build", "version", "cancel"])
    if action == "build"
      build_int = build.to_i
      build_int += 1
      next_version(
        version: version,
        build: build_int.to_s,
        project: options[:project]
      )
    elsif action == "version"
      bump_type = UI.select("Select version the bump type: ", ["patch", "minor", "major"])
      next_version(
        bump_type: bump_type,
        project: options[:project]
      )
    else
      UI.user_error! "Cannot publish the curernt beta version (tag exists)"
    end
  end
  if !UI.confirm("Are you sure to submit beta version '#{version}' build ##{build} ?")
    UI.user_error! "User abort beta version"
  end
  add_git_tag(
    tag: "#{prefix_versiontag}#{version}-beta#{build}"
  )
  push_to_git_remote()
  build = increment_build_number()
  git_commit(
    path: ["."],
    message: "Bumped build number ##{build}"
  )
  Actions.sh("git checkout #{develop_branch}")
  Actions.sh("git merge #{beta_branch}")
  push_to_git_remote()
end
