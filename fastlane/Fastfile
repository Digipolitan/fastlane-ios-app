private_lane :send_app_release do |options|
  develop_branch = git_get_develop_branch()
  current_version_number = lane_context[SharedValues::VERSION_NUMBER]
  current_build_number = lane_context[SharedValues::BUILD_NUMBER]
  version_number = lane_context[SharedValues::NEXT_VERSION_NUMBER]
  build_number = lane_context[SharedValues::NEXT_BUILD_NUMBER]
  if current_version_number != version_number || current_build_number != build_number
    increment_version_number(
      xcodeproj: options[:project],
      version_number: version_number
    )
    increment_build_number(
      xcodeproj: options[:project],
      build_number: build_number
    )
    git_commit(
      path: ["."],
      message: "Bumped release version '#{version_number}' build ##{build_number}"
    )
  end
  add_git_tag(
    tag: lane_context[:GIT_BUILD_TAG]
  )
  push_to_git_remote()
  release_branch = git_branch()
  Actions.sh("git checkout #{develop_branch}")
  Actions.sh("git merge #{release_branch}")
  push_to_git_remote()
end

lane :start_app_release do |options|
  prepare_for_release(options)
  version = lane_context[SharedValues::NEXT_VERSION_NUMBER]
  begin
    git_flow_release(
      action: "start",
      name: version
    )
  rescue
    UI.user_error! "Cannot start release '#{version}', you are probably starting the current release version\n\
    * if you want to update a new build release use the following lane : 'update_app_release'\n\
    * if you want to publish the release use the lane : 'publish_app_release'"
  end
  send_app_release(options)
end

lane :update_app_release do |options|
  prepare_for_release(options)
  develop_branch = git_get_develop_branch()
  version_number = lane_context[SharedValues::NEXT_VERSION_NUMBER]
  prefix_release = lane_context[SharedValues::GIT_FLOW_RELEASE_PREFIX]
  release_branch = "#{prefix_release}#{version_number}"
  begin
    Actions.sh("git checkout #{release_branch}")
  rescue
    UI.user_error! "Cannot update release '#{version}', unknown release version\n\
    * first you need to start a new release version with the following lane : 'start_app_release'"
  end
  Actions.sh("git merge #{develop_branch}")
  send_app_release(options)
end
